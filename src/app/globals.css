@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  scroll-behavior: smooth;
  scroll-padding-top: 100px;
  transition: scroll-padding-top 0.5s ease;
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;

    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;

    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;

    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;

    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;

    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;

    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;

    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;

    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;

    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;

    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;

    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;

    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;

    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

/* global.css */
:root {
  /* Breakpoints */
  --breakpoint-xs: 360px;
  --breakpoint-sm: 576px;
  --breakpoint-md: 768px;
  --breakpoint-lg: 992px;
  --breakpoint-xl: 1200px;
  --breakpoint-xxl: 1400px;
  --breakpoint-ultra: 1600px;
  --breakpoint-max: 1920px;

  /* Spacing System */
  --space-3xs: 0.25rem;
  --space-2xs: 0.5rem;
  --space-xs: 0.75rem;
  --space-sm: 1rem;
  --space-md: 1.5rem;
  --space-lg: 2rem;
  --space-xl: 3rem;
  --space-2xl: 4rem;
  --space-3xl: 6rem;

  /* Grid Configuration */
  --grid-columns: 12;
  --grid-gap: var(--space-md);
  --container-padding: clamp(var(--space-sm), 3vw, var(--space-xl));
}

/* Base Container System */
.container {
  width: 100%;
  /* margin: 0 auto; */
  padding-inline: var(--container-padding);
}

/* Responsive Breakpoint Containers */
@media (min-width: 360px) {
  .container { max-width: var(--breakpoint-xs); }
}

@media (min-width: 576px) {
  .container { max-width: var(--breakpoint-sm); }
}

@media (min-width: 768px) {
  .container { 
    max-width: var(--breakpoint-md);
    padding-inline: calc(var(--container-padding) * 1.5);
  }
}

@media (min-width: 992px) {
  .container { 
    max-width: var(--breakpoint-lg);
    padding-inline: calc(var(--container-padding) * 2);
  }
}

@media (min-width: 1200px) {
  .container { 
    max-width: var(--breakpoint-xl);
    padding-inline: calc(var(--container-padding) * 2.5);
  }
}

@media (min-width: 1400px) {
  .container { 
    max-width: var(--breakpoint-xxl);
    padding-inline: calc(var(--container-padding) * 3);
  }
}

@media (min-width: 1600px) {
  .container { 
    max-width: var(--breakpoint-ultra);
    padding-inline: calc(var(--container-padding) * 4);
  }
}

@media (min-width: 1920px) {
  .container { 
    max-width: var(--breakpoint-max);
    padding-inline: calc(var(--container-padding) * 5);
  }
}

.active-section {
  @apply ring-4 ring-green-200/50 bg-green-50 rounded-xl transition-all duration-300;
}

/* Scrolling Indicator animation */
@keyframes scroll-wheel {
  0%, 100% { transform: translateY(0); opacity: 1; }
  50% { transform: translateY(12px); opacity: 0.5; }
}

.animate-scroll-wheel {
  animation: scroll-wheel 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@media (prefers-reduced-motion: reduce) {
  .animate-scroll-wheel,
  .animate-bounce {
    animation: none;
  }
}

@layer base {
  * {
    border-color: hsl(var(--border)); /* Use the custom CSS variable for border color */
    outline-color: hsl(var(--ring) / 0.5); /* Use the custom CSS variable for outline color */
  }

  body {
    background-color: hsl(var(--background)); /* Use the custom CSS variable for background */
    color: hsl(var(--foreground)); /* Use the custom CSS variable for text color */
    font-family: var(--font-montserrat), sans-serif;
  }
}